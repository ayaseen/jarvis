networks:
  jarvis-network:  # ← KEEP THIS THE SAME
    driver: bridge
    name: jarvis-net  # ← This sets the actual Docker network name
services:
  # ============= Infrastructure Services =============
  
  postgres:
    image: pgvector/pgvector:pg16
    container_name: jarvis-postgres
    hostname: postgres
    environment:
      POSTGRES_DB: jarvis
      POSTGRES_USER: jarvis
      POSTGRES_PASSWORD: jarvis123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - /mnt/appsdata/jarvis/postgres:/var/lib/postgresql/data
      - /mnt/appsdata/jarvis/init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - jarvis-network 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jarvis"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: jarvis-redis
    hostname: redis
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - /mnt/appsdata/jarvis/redis:/data
    networks:
      - jarvis-network 
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # ============= Milvus Vector Database =============
  
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - /mnt/appsdata/jarvis/milvus/etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      - jarvis-network 
    restart: unless-stopped

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - /mnt/appsdata/jarvis/milvus/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    networks:
      - jarvis-network 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  milvus:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.6.0
    command: ["milvus", "run", "standalone"]
    hostname: milvus
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MINIO_USE_SSL: "false"
      MINIO_BUCKET_NAME: "a-bucket"
      MINIO_ACCESS_KEY_ID: minioadmin
      MINIO_SECRET_ACCESS_KEY: minioadmin
      MINIO_REGION: us-east-1          # add this to avoid malformed credential
      MQ_TYPE: woodpecker
    volumes:
      - /mnt/appsdata/jarvis/milvus/db:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    networks:
      - jarvis-network
    depends_on:
      - etcd
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  # ============= vLLM Service =============
  vllm:
    image: vllm/vllm-openai:latest
    container_name: jarvis-vllm
    hostname: vllm
    environment:
      HUGGING_FACE_HUB_TOKEN: ${HUGGING_FACE_TOKEN:-}
      PYTORCH_CUDA_ALLOC_CONF: "expandable_segments:True,max_split_size_mb:256"
      CUDA_VISIBLE_DEVICES: "0"
    ports:
      - "8080:8000"
    volumes:
      - /mnt/appsdata/jarvis/models/vllm:/root/.cache/huggingface
    networks:
      - jarvis-network 
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: [gpu]
    command: [
      "--model", "TheBloke/Mistral-7B-Instruct-v0.2-AWQ",
      "--max-model-len", "2048",
      "--gpu-memory-utilization", "0.5",
      "--quantization", "awq",
      "--dtype", "half",
      "--api-key", "jarvis-key-123",
      "--host", "0.0.0.0",
      "--port", "8000",
      "--enforce-eager",
      "--max-num-batched-tokens", "2048",
      "--max-num-seqs", "4"
    ]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # ============= JARVIS Services =============
  
  llm-service:
    image: hub.rhlab.dev/jarvis/llm:latest
    container_name: jarvis-llm
    hostname: llm-service
    environment:
      VLLM_HOST: vllm
      VLLM_PORT: 8000
      VLLM_API_KEY: jarvis-key-123
      REDIS_HOST: redis
      MODEL_NAME: TheBloke/Mistral-7B-Instruct-v0.2-AWQ
    ports:
      - "8001:8001"
    volumes:
      - /mnt/appsdata/jarvis/shared:/shared
      - /mnt/appsdata/jarvis/logs/llm:/logs
    networks:
      - jarvis-network 
    depends_on:
      - vllm
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  rag-service:
    image: hub.rhlab.dev/jarvis/rag:latest
    container_name: jarvis-rag
    hostname: rag-service
    environment:
      MILVUS_HOST: milvus
      MILVUS_PORT: 19530
      POSTGRES_HOST: postgres
      POSTGRES_USER: jarvis
      POSTGRES_PASSWORD: jarvis123
      EMBEDDING_MODEL: sentence-transformers/all-MiniLM-L6-v2
      EMBEDDING_USE_GPU: "true"
      TRANSFORMERS_CACHE: /models/transformers
      CUDA_VISIBLE_DEVICES: "0"
      PYTORCH_CUDA_ALLOC_CONF: "expandable_segments:True,max_split_size_mb:128"
    ports:
      - "8002:8002"
    volumes:
      - /mnt/appsdata/jarvis/shared:/shared
      - /mnt/appsdata/jarvis/documents:/documents
      - /mnt/appsdata/jarvis/models/transformers:/models/transformers
      - /mnt/appsdata/jarvis/logs/rag:/logs
    networks:
      - jarvis-network 
    depends_on:
      - milvus
      - postgres
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  voice-service:
    image: hub.rhlab.dev/jarvis/voice:latest
    container_name: jarvis-voice
    hostname: voice-service
    environment:
      WHISPER_MODEL: base.en
      TTS_MODEL: tts_models/en/ljspeech/tacotron2-DDC
      FORCE_CPU: "false"
      CUDA_VISIBLE_DEVICES: "0"
      PYTORCH_CUDA_ALLOC_CONF: "expandable_segments:True,max_split_size_mb:128"
      WHISPER_CACHE: /models/whisper
      TTS_CACHE: /models/tts
    ports:
      - "8003:8003"
    volumes:
      - /mnt/appsdata/jarvis/models/whisper:/models/whisper
      - /mnt/appsdata/jarvis/models/tts:/models/tts
      - /mnt/appsdata/jarvis/shared:/shared
      - /mnt/appsdata/jarvis/logs/voice:/logs
    networks:
      - jarvis-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  orchestrator:
    image: hub.rhlab.dev/jarvis/orchestrator:latest
    container_name: jarvis-orchestrator
    hostname: orchestrator
    environment:
      LLM_SERVICE_URL: http://llm-service:8001
      RAG_SERVICE_URL: http://rag-service:8002
      VOICE_SERVICE_URL: http://voice-service:8003
      VLLM_URL: http://vllm:8000
      VLLM_API_KEY: jarvis-key-123
      REDIS_HOST: redis
      POSTGRES_HOST: postgres
      POSTGRES_USER: jarvis
      POSTGRES_PASSWORD: jarvis123
      MODEL_NAME: TheBloke/Mistral-7B-Instruct-v0.2-AWQ
    ports:
      - "8000:8000"
    volumes:
      - /mnt/appsdata/jarvis/shared:/shared
      - /mnt/appsdata/jarvis/logs/orchestrator:/logs
    networks:
      - jarvis-network
    depends_on:
      - llm-service
      - rag-service
      - voice-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  web:
    image: hub.rhlab.dev/jarvis/web:latest
    container_name: jarvis-web
    hostname: web
    # CRITICAL: Override the command to run nginx properly
    command: ["nginx", "-g", "daemon off;"]
    environment:
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1002}
      TZ: ${TZ:-UTC}
    ports:
      - "3000:80"
    volumes:
      - /mnt/appsdata/jarvis/logs/nginx:/var/log/nginx
    networks:
      - jarvis-network
    depends_on:
      - orchestrator
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
